import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, a as validate_slots, o as onMount, b as space, e as element, t as text, x as query_selector_all, h as detach_dev, g as claim_space, c as claim_element, f as children, j as claim_text, k as attr_dev, l as add_location, m as insert_dev, n as append_dev, p as set_data_dev, q as noop } from './client.ae6638b2.js';
import { C as Client, P as PrismicDOM, l as linkResolver } from './prismic-config.1f9b09cd.js';

/* src/routes/blog/[uid].svelte generated by Svelte v3.24.0 */
const file = "src/routes/blog/[uid].svelte";

function create_fragment(ctx) {
	let title_value;
	let t0;
	let section0;
	let div1;
	let div0;
	let img;
	let img_src_value;
	let img_alt_value;
	let t1;
	let section1;
	let div2;
	let h2;
	let t2_value = PrismicDOM.RichText.asText(/*post*/ ctx[0].data.title) + "";
	let t2;
	let t3;
	let p0;
	let t4;
	let t5_value = formatDate(/*post*/ ctx[0].data.date) + "";
	let t5;
	let t6;
	let p1;
	let t7_value = PrismicDOM.RichText.asText(/*post*/ ctx[0].data.intro) + "";
	let t7;
	let t8;
	let p2;
	let t9_value = PrismicDOM.RichText.asText(/*post*/ ctx[0].data.main) + "";
	let t9;
	document.title = title_value = PrismicDOM.RichText.asText(/*post*/ ctx[0].data.title);

	const block = {
		c: function create() {
			t0 = space();
			section0 = element("section");
			div1 = element("div");
			div0 = element("div");
			img = element("img");
			t1 = space();
			section1 = element("section");
			div2 = element("div");
			h2 = element("h2");
			t2 = text(t2_value);
			t3 = space();
			p0 = element("p");
			t4 = text("Written on ");
			t5 = text(t5_value);
			t6 = space();
			p1 = element("p");
			t7 = text(t7_value);
			t8 = space();
			p2 = element("p");
			t9 = text(t9_value);
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-1gv1lc1\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			section0 = claim_element(nodes, "SECTION", { class: true });
			var section0_nodes = children(section0);
			div1 = claim_element(section0_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);

			img = claim_element(div0_nodes, "IMG", {
				src: true,
				alt: true,
				"data-uk-cover": true
			});

			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			section0_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);
			section1 = claim_element(nodes, "SECTION", { class: true });
			var section1_nodes = children(section1);
			div2 = claim_element(section1_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			h2 = claim_element(div2_nodes, "H2", { class: true });
			var h2_nodes = children(h2);
			t2 = claim_text(h2_nodes, t2_value);
			h2_nodes.forEach(detach_dev);
			t3 = claim_space(div2_nodes);
			p0 = claim_element(div2_nodes, "P", { class: true });
			var p0_nodes = children(p0);
			t4 = claim_text(p0_nodes, "Written on ");
			t5 = claim_text(p0_nodes, t5_value);
			p0_nodes.forEach(detach_dev);
			t6 = claim_space(div2_nodes);
			p1 = claim_element(div2_nodes, "P", { class: true });
			var p1_nodes = children(p1);
			t7 = claim_text(p1_nodes, t7_value);
			p1_nodes.forEach(detach_dev);
			t8 = claim_space(div2_nodes);
			p2 = claim_element(div2_nodes, "P", { class: true });
			var p2_nodes = children(p2);
			t9 = claim_text(p2_nodes, t9_value);
			p2_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			section1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = /*post*/ ctx[0].data.image.url)) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", img_alt_value = PrismicDOM.RichText.asText(/*post*/ ctx[0].data.title));
			attr_dev(img, "data-uk-cover", "");
			add_location(img, file, 37, 0, 763);
			attr_dev(div0, "class", "uk-height-medium uk-cover-container");
			add_location(div0, file, 36, 0, 713);
			attr_dev(div1, "class", "uk-container");
			add_location(div1, file, 35, 0, 686);
			attr_dev(section0, "class", "uk-section uk-section-small uk-padding-remove-bottom");
			add_location(section0, file, 34, 0, 615);
			attr_dev(h2, "class", "uk-heading-medium title svelte-6b85v1");
			add_location(h2, file, 44, 0, 981);
			attr_dev(p0, "class", "uk-article-meta svelte-6b85v1");
			add_location(p0, file, 45, 0, 1068);
			attr_dev(p1, "class", "uk-text-lead svelte-6b85v1");
			add_location(p1, file, 46, 0, 1139);
			attr_dev(p2, "class", "svelte-6b85v1");
			add_location(p2, file, 47, 0, 1213);
			attr_dev(div2, "class", "uk-container uk-container-small");
			add_location(div2, file, 43, 0, 935);
			attr_dev(section1, "class", "uk-section-small uk-article svelte-6b85v1");
			add_location(section1, file, 42, 0, 889);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, section0, anchor);
			append_dev(section0, div1);
			append_dev(div1, div0);
			append_dev(div0, img);
			insert_dev(target, t1, anchor);
			insert_dev(target, section1, anchor);
			append_dev(section1, div2);
			append_dev(div2, h2);
			append_dev(h2, t2);
			append_dev(div2, t3);
			append_dev(div2, p0);
			append_dev(p0, t4);
			append_dev(p0, t5);
			append_dev(div2, t6);
			append_dev(div2, p1);
			append_dev(p1, t7);
			append_dev(div2, t8);
			append_dev(div2, p2);
			append_dev(p2, t9);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*PrismicDOM, post*/ 1 && title_value !== (title_value = PrismicDOM.RichText.asText(/*post*/ ctx[0].data.title))) {
				document.title = title_value;
			}

			if (dirty & /*post*/ 1 && img.src !== (img_src_value = /*post*/ ctx[0].data.image.url)) {
				attr_dev(img, "src", img_src_value);
			}

			if (dirty & /*post*/ 1 && img_alt_value !== (img_alt_value = PrismicDOM.RichText.asText(/*post*/ ctx[0].data.title))) {
				attr_dev(img, "alt", img_alt_value);
			}

			if (dirty & /*post*/ 1 && t2_value !== (t2_value = PrismicDOM.RichText.asText(/*post*/ ctx[0].data.title) + "")) set_data_dev(t2, t2_value);
			if (dirty & /*post*/ 1 && t5_value !== (t5_value = formatDate(/*post*/ ctx[0].data.date) + "")) set_data_dev(t5, t5_value);
			if (dirty & /*post*/ 1 && t7_value !== (t7_value = PrismicDOM.RichText.asText(/*post*/ ctx[0].data.intro) + "")) set_data_dev(t7, t7_value);
			if (dirty & /*post*/ 1 && t9_value !== (t9_value = PrismicDOM.RichText.asText(/*post*/ ctx[0].data.main) + "")) set_data_dev(t9, t9_value);
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(section0);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(section1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

let post = null;

async function preload({ params, query }) {
	const uid = params.uid;
	post = await Client.getByUID("post", uid);

	if (post) {
		return { post };
	} else {
		this.error(res.status, data.message);
	}
}

function formatDate(date) {
	return new Date(date).toLocaleDateString();
}

function instance($$self, $$props, $$invalidate) {
	let { post } = $$props;
	const writable_props = ["post"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<U5Buidu5D> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("U5Buidu5D", $$slots, []);

	$$self.$set = $$props => {
		if ("post" in $$props) $$invalidate(0, post = $$props.post);
	};

	$$self.$capture_state = () => ({
		onMount,
		PrismicDOM,
		Client,
		linkResolver,
		post,
		preload,
		formatDate,
		post
	});

	$$self.$inject_state = $$props => {
		if ("post" in $$props) $$invalidate(0, post = $$props.post);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [post];
}

class U5Buidu5D extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { post: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "U5Buidu5D",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*post*/ ctx[0] === undefined && !("post" in props)) {
			console.warn("<U5Buidu5D> was created without expected prop 'post'");
		}
	}

	get post() {
		throw new Error("<U5Buidu5D>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set post(value) {
		throw new Error("<U5Buidu5D>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default U5Buidu5D;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiW3VpZF0uOTIwZWJkNGUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvYmxvZy9bdWlkXS5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdCBjb250ZXh0PVwibW9kdWxlXCI+XG5cdGltcG9ydCB7IG9uTW91bnQgfSBmcm9tICdzdmVsdGUnO1xuXHRpbXBvcnQgUHJpc21pY0RPTSBmcm9tICdwcmlzbWljLWRvbSc7XG5cdGltcG9ydCB7IENsaWVudCwgbGlua1Jlc29sdmVyIH0gZnJvbSAnLi4vLi4vLi4vcHJpc21pYy1jb25maWcuanMnO1xuXG5sZXQgcG9zdCA9IG51bGw7XG5cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHByZWxvYWQoeyBwYXJhbXMsIHF1ZXJ5IH0pIHtcblx0Y29uc3QgdWlkID0gcGFyYW1zLnVpZDtcblx0cG9zdCA9IGF3YWl0IENsaWVudC5nZXRCeVVJRCgncG9zdCcsIHVpZCk7XG5cblxuXHRpZiAocG9zdCkge1xuXHRcdHJldHVybiB7XG5cdFx0XHRwb3N0XG5cdFx0fTtcblx0fSBlbHNlIHtcblx0XHR0aGlzLmVycm9yKHJlcy5zdGF0dXMsIGRhdGEubWVzc2FnZSk7XG5cdH1cbn1cbmZ1bmN0aW9uIGZvcm1hdERhdGUoZGF0ZSkge1xuXHRyZXR1cm4gbmV3IERhdGUoZGF0ZSkudG9Mb2NhbGVEYXRlU3RyaW5nKClcbn1cbjwvc2NyaXB0PlxuXG48c2NyaXB0PlxuZXhwb3J0IGxldCBwb3N0O1xuPC9zY3JpcHQ+XG5cbjxzdmVsdGU6aGVhZD5cbjx0aXRsZT57UHJpc21pY0RPTS5SaWNoVGV4dC5hc1RleHQocG9zdC5kYXRhLnRpdGxlKX08L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cblxuPHNlY3Rpb24gY2xhc3M9XCJ1ay1zZWN0aW9uIHVrLXNlY3Rpb24tc21hbGwgdWstcGFkZGluZy1yZW1vdmUtYm90dG9tXCI+XG48ZGl2IGNsYXNzPVwidWstY29udGFpbmVyXCI+XG48ZGl2IGNsYXNzPVwidWstaGVpZ2h0LW1lZGl1bSB1ay1jb3Zlci1jb250YWluZXJcIj5cbjxpbWcgc3JjPVwie3Bvc3QuZGF0YS5pbWFnZS51cmx9XCIgYWx0PVwie1ByaXNtaWNET00uUmljaFRleHQuYXNUZXh0KHBvc3QuZGF0YS50aXRsZSl9XCIgZGF0YS11ay1jb3Zlcj5cbjwvZGl2PlxuPC9kaXY+XG48L3NlY3Rpb24+XG5cbjxzZWN0aW9uIGNsYXNzPVwidWstc2VjdGlvbi1zbWFsbCB1ay1hcnRpY2xlXCI+XG48ZGl2IGNsYXNzPVwidWstY29udGFpbmVyIHVrLWNvbnRhaW5lci1zbWFsbFwiPlxuPGgyIGNsYXNzPVwidWstaGVhZGluZy1tZWRpdW0gdGl0bGVcIj57UHJpc21pY0RPTS5SaWNoVGV4dC5hc1RleHQocG9zdC5kYXRhLnRpdGxlKX08L2gyPlxuPHAgY2xhc3M9XCJ1ay1hcnRpY2xlLW1ldGFcIj5Xcml0dGVuIG9uIHtmb3JtYXREYXRlKHBvc3QuZGF0YS5kYXRlKX08L3A+XG48cCBjbGFzcz1cInVrLXRleHQtbGVhZFwiPntQcmlzbWljRE9NLlJpY2hUZXh0LmFzVGV4dChwb3N0LmRhdGEuaW50cm8pfTwvcD5cbjxwPntQcmlzbWljRE9NLlJpY2hUZXh0LmFzVGV4dChwb3N0LmRhdGEubWFpbil9PC9wPlxuPC9kaXY+XG48L3NlY3Rpb24+XG5cbjxzdHlsZT5cblxuXHRoMi50aXRsZSB7XG5cdFx0Zm9udC1mYW1pbHk6IG1vc3RyYS1udW92YSwgc2Fucy1zZXJpZjtcblx0XHRmb250LXdlaWdodDogNDAwO1xuXHRcdGZvbnQtc2l6ZTogY2xhbXAoMnJlbSwgMy4yNXZ3LCA0cmVtKTtcblx0XHR0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuXHRcdGNvbG9yOiBibGFjaztcblx0fVxuXG5cdC51ay1hcnRpY2xlLW1ldGEge1xuXHRcdGZvbnQtZmFtaWx5OiBuZXVlLWhhYXMtdW5pY2EsIHNhbnMtc2VyaWY7XG5cdFx0Zm9udC13ZWlnaHQ6IDYwMCAhaW1wb3J0YW50O1xuXHRcdGZvbnQtc2l6ZTogMC43NXJlbSAhaW1wb3J0YW50O1xuXHRcdGxldHRlci1zcGFjaW5nOiAwLjAyNXJlbSAhaW1wb3J0YW50O1xuXHRcdGNvbG9yOiAjNDQ0NDQ0ICFpbXBvcnRhbnQ7XG5cdH1cblxuXHQudWstYXJ0aWNsZSBwLnVrLXRleHQtbGVhZCB7XG5cdFx0Zm9udC1mYW1pbHk6IGFkb2JlLWNhc2xvbi1wcm8sIHNlcmlmO1xuXHRcdGZvbnQtc2l6ZTogMS4yNXJlbSAhaW1wb3J0YW50O1xuXHRcdGZvbnQtd2VpZ2h0OiA0MDAgIWltcG9ydGFudDtcblx0XHRjb2xvcjogYmxhY2sgIWltcG9ydGFudDtcblx0fVxuXG5cdC51ay1hcnRpY2xlIHAge1xuXHRcdGZvbnQtZmFtaWx5OiBhZG9iZS1jYXNsb24tcHJvLCBzZXJpZjtcblx0XHRmb250LXdlaWdodDogNDAwICFpbXBvcnRhbnQ7XG5cdFx0Zm9udC1zaXplOiAxLjEyNXJlbSAhaW1wb3J0YW50O1xuXHRcdGxpbmUtaGVpZ2h0OiAxLjI1O1xuXHRcdGNvbG9yOiBibGFjayAhaW1wb3J0YW50O1xuXHR9XG5cbjwvc3R5bGU+XG5cblxuXG5cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O2dCQTRDcUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxNQUFNLFVBQUMsR0FBSSxJQUFDLElBQUksQ0FBQyxLQUFLOzs7OztnQkFDeEMsVUFBVSxVQUFDLEdBQUksSUFBQyxJQUFJLENBQUMsSUFBSTs7OztnQkFDdkMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxNQUFNLFVBQUMsR0FBSSxJQUFDLElBQUksQ0FBQyxLQUFLOzs7O2dCQUMvRCxVQUFVLENBQUMsUUFBUSxDQUFDLE1BQU0sVUFBQyxHQUFJLElBQUMsSUFBSSxDQUFDLElBQUk7O2dDQWhCckMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxNQUFNLFVBQUMsR0FBSSxJQUFDLElBQUksQ0FBQyxLQUFLOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzZDQU12QyxHQUFJLElBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHO3dDQUFTLFVBQVUsQ0FBQyxRQUFRLENBQUMsTUFBTSxVQUFDLEdBQUksSUFBQyxJQUFJLENBQUMsS0FBSzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3dFQU56RSxVQUFVLENBQUMsUUFBUSxDQUFDLE1BQU0sVUFBQyxHQUFJLElBQUMsSUFBSSxDQUFDLEtBQUs7Ozs7bUVBTXZDLEdBQUksSUFBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUc7Ozs7Z0VBQVMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxNQUFNLFVBQUMsR0FBSSxJQUFDLElBQUksQ0FBQyxLQUFLOzs7O3NEQU81QyxVQUFVLENBQUMsUUFBUSxDQUFDLE1BQU0sVUFBQyxHQUFJLElBQUMsSUFBSSxDQUFDLEtBQUs7c0RBQ3hDLFVBQVUsVUFBQyxHQUFJLElBQUMsSUFBSSxDQUFDLElBQUk7c0RBQ3ZDLFVBQVUsQ0FBQyxRQUFRLENBQUMsTUFBTSxVQUFDLEdBQUksSUFBQyxJQUFJLENBQUMsS0FBSztzREFDL0QsVUFBVSxDQUFDLFFBQVEsQ0FBQyxNQUFNLFVBQUMsR0FBSSxJQUFDLElBQUksQ0FBQyxJQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQTFDekMsSUFBSSxHQUFHLElBQUk7O2VBR08sT0FBTyxHQUFHLE1BQU0sRUFBRSxLQUFLO09BQ3RDLEdBQUcsR0FBRyxNQUFNLENBQUMsR0FBRztDQUN0QixJQUFJLFNBQVMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsR0FBRzs7S0FHcEMsSUFBSTtXQUVOLElBQUk7O0VBR0wsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxPQUFPOzs7O1NBRzVCLFVBQVUsQ0FBQyxJQUFJO1lBQ1osSUFBSSxDQUFDLElBQUksRUFBRSxrQkFBa0I7Ozs7T0FLOUIsSUFBSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=
