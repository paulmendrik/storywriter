import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_each_argument, o as onMount, a as validate_slots, e as element, b as space, t as text, c as claim_element, f as children, g as claim_space, h as detach_dev, j as claim_text, k as attr_dev, l as add_location, m as insert_dev, n as append_dev, p as set_data_dev, q as noop, r as destroy_each, u as set_style, w as create_component, x as query_selector_all, y as claim_component, z as mount_component, A as transition_in, B as transition_out, C as destroy_component } from './client.ae6638b2.js';
import { P as PrismicDOM, C as Client, l as linkResolver, i as index } from './prismic-config.1f9b09cd.js';

/* src/components/List.svelte generated by Svelte v3.24.0 */
const file = "src/components/List.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[2] = list[i];
	return child_ctx;
}

// (32:0) {#each posts as post}
function create_each_block(ctx) {
	let li;
	let div3;
	let div0;
	let img;
	let img_src_value;
	let t0;
	let canvas;
	let t1;
	let div2;
	let a;
	let h3;
	let t2_value = PrismicDOM.RichText.asText(/*post*/ ctx[2].data.title) + "";
	let t2;
	let a_href_value;
	let t3;
	let p0;
	let t4_value = PrismicDOM.RichText.asText(/*post*/ ctx[2].data.intro) + "";
	let t4;
	let t5;
	let div1;
	let p1;
	let t6_value = formatDate(/*post*/ ctx[2].data.date) + "";
	let t6;
	let t7;

	const block = {
		c: function create() {
			li = element("li");
			div3 = element("div");
			div0 = element("div");
			img = element("img");
			t0 = space();
			canvas = element("canvas");
			t1 = space();
			div2 = element("div");
			a = element("a");
			h3 = element("h3");
			t2 = text(t2_value);
			t3 = space();
			p0 = element("p");
			t4 = text(t4_value);
			t5 = space();
			div1 = element("div");
			p1 = element("p");
			t6 = text(t6_value);
			t7 = space();
			this.h();
		},
		l: function claim(nodes) {
			li = claim_element(nodes, "LI", { class: true });
			var li_nodes = children(li);
			div3 = claim_element(li_nodes, "DIV", { class: true, "uk-grid": true });
			var div3_nodes = children(div3);
			div0 = claim_element(div3_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			img = claim_element(div0_nodes, "IMG", { src: true, alt: true, "uk-cover": true });
			t0 = claim_space(div0_nodes);
			canvas = claim_element(div0_nodes, "CANVAS", { width: true, height: true });
			children(canvas).forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t1 = claim_space(div3_nodes);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			a = claim_element(div2_nodes, "A", { class: true, href: true });
			var a_nodes = children(a);
			h3 = claim_element(a_nodes, "H3", { class: true });
			var h3_nodes = children(h3);
			t2 = claim_text(h3_nodes, t2_value);
			h3_nodes.forEach(detach_dev);
			a_nodes.forEach(detach_dev);
			t3 = claim_space(div2_nodes);
			p0 = claim_element(div2_nodes, "P", { class: true });
			var p0_nodes = children(p0);
			t4 = claim_text(p0_nodes, t4_value);
			p0_nodes.forEach(detach_dev);
			t5 = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			p1 = claim_element(div1_nodes, "P", { class: true });
			var p1_nodes = children(p1);
			t6 = claim_text(p1_nodes, t6_value);
			p1_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			t7 = claim_space(li_nodes);
			li_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = /*post*/ ctx[2].data.image.url)) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", "");
			attr_dev(img, "uk-cover", "");
			add_location(img, file, 36, 0, 1039);
			attr_dev(canvas, "width", "100");
			attr_dev(canvas, "height", "100");
			add_location(canvas, file, 37, 0, 1089);
			attr_dev(div0, "class", "uk-flex-last@s uk-card-media-right uk-width-1-3@s uk-cover-container");
			add_location(div0, file, 35, 0, 956);
			attr_dev(h3, "class", "uk-card-title svelte-1kvzk0l");
			add_location(h3, file, 41, 45, 1227);
			attr_dev(a, "class", "uk-link");
			attr_dev(a, "href", a_href_value = linkResolver(/*post*/ ctx[2]));
			add_location(a, file, 41, 0, 1182);
			attr_dev(p0, "class", "svelte-1kvzk0l");
			add_location(p0, file, 42, 0, 1308);
			attr_dev(p1, "class", "date svelte-1kvzk0l");
			add_location(p1, file, 44, 0, 1390);
			attr_dev(div1, "class", "uk-card-footer svelte-1kvzk0l");
			add_location(div1, file, 43, 0, 1361);
			attr_dev(div2, "class", "uk-card-body uk-width-2-3@s svelte-1kvzk0l");
			add_location(div2, file, 40, 0, 1140);
			attr_dev(div3, "class", "uk-card uk-card-default uk-grid-collapse uk-margin svelte-1kvzk0l");
			attr_dev(div3, "uk-grid", "");
			add_location(div3, file, 33, 0, 882);
			attr_dev(li, "class", "svelte-1kvzk0l");
			add_location(li, file, 32, 0, 877);
		},
		m: function mount(target, anchor) {
			insert_dev(target, li, anchor);
			append_dev(li, div3);
			append_dev(div3, div0);
			append_dev(div0, img);
			append_dev(div0, t0);
			append_dev(div0, canvas);
			append_dev(div3, t1);
			append_dev(div3, div2);
			append_dev(div2, a);
			append_dev(a, h3);
			append_dev(h3, t2);
			append_dev(div2, t3);
			append_dev(div2, p0);
			append_dev(p0, t4);
			append_dev(div2, t5);
			append_dev(div2, div1);
			append_dev(div1, p1);
			append_dev(p1, t6);
			append_dev(li, t7);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*posts*/ 1 && img.src !== (img_src_value = /*post*/ ctx[2].data.image.url)) {
				attr_dev(img, "src", img_src_value);
			}

			if (dirty & /*posts*/ 1 && t2_value !== (t2_value = PrismicDOM.RichText.asText(/*post*/ ctx[2].data.title) + "")) set_data_dev(t2, t2_value);

			if (dirty & /*posts*/ 1 && a_href_value !== (a_href_value = linkResolver(/*post*/ ctx[2]))) {
				attr_dev(a, "href", a_href_value);
			}

			if (dirty & /*posts*/ 1 && t4_value !== (t4_value = PrismicDOM.RichText.asText(/*post*/ ctx[2].data.intro) + "")) set_data_dev(t4, t4_value);
			if (dirty & /*posts*/ 1 && t6_value !== (t6_value = formatDate(/*post*/ ctx[2].data.date) + "")) set_data_dev(t6, t6_value);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(li);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(32:0) {#each posts as post}",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let section;
	let div;
	let ul;
	let each_value = /*posts*/ ctx[0];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const block = {
		c: function create() {
			section = element("section");
			div = element("div");
			ul = element("ul");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l: function claim(nodes) {
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			div = claim_element(section_nodes, "DIV", { class: true, "uk-scrollspy": true });
			var div_nodes = children(div);
			ul = claim_element(div_nodes, "UL", { class: true });
			var ul_nodes = children(ul);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(ul_nodes);
			}

			ul_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(ul, "class", "uk-list post-list uk-flex uk-flex-column svelte-1kvzk0l");
			add_location(ul, file, 29, 0, 800);
			attr_dev(div, "class", "uk-container uk-container-small");
			attr_dev(div, "uk-scrollspy", "cls: uk-animation-fade; target: .uk-card; delay: 500; repeat: true");
			add_location(div, file, 28, 0, 671);
			attr_dev(section, "class", "uk-section uk-padding-remove-vertical");
			add_location(section, file, 27, 0, 615);
		},
		m: function mount(target, anchor) {
			insert_dev(target, section, anchor);
			append_dev(section, div);
			append_dev(div, ul);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(ul, null);
			}
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*formatDate, posts, PrismicDOM, linkResolver*/ 3) {
				each_value = /*posts*/ ctx[0];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(ul, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(section);
			destroy_each(each_blocks, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function formatDate(date) {
	return new Date(date).toLocaleDateString();
}

function instance($$self, $$props, $$invalidate) {
	let { posts } = $$props;

	onMount(() => {
		const item = document.getElementsByClassName("uk-link");
		const element = document.getElementsByClassName("uk-main");

		for (let i = 0; i < item.length; i++) {
			item[i].onclick = function () {
				element.item(0).classList.toggle("active");
			};
		}
	});

	const writable_props = ["posts"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<List> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("List", $$slots, []);

	$$self.$set = $$props => {
		if ("posts" in $$props) $$invalidate(0, posts = $$props.posts);
	};

	$$self.$capture_state = () => ({
		onMount,
		PrismicDOM,
		Client,
		linkResolver,
		posts,
		formatDate
	});

	$$self.$inject_state = $$props => {
		if ("posts" in $$props) $$invalidate(0, posts = $$props.posts);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [posts, formatDate];
}

class List extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { posts: 0, formatDate: 1 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "List",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*posts*/ ctx[0] === undefined && !("posts" in props)) {
			console.warn("<List> was created without expected prop 'posts'");
		}
	}

	get posts() {
		throw new Error("<List>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set posts(value) {
		throw new Error("<List>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get formatDate() {
		return formatDate;
	}

	set formatDate(value) {
		throw new Error("<List>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/Intro.svelte generated by Svelte v3.24.0 */
const file$1 = "src/components/Intro.svelte";

function create_fragment$1(ctx) {
	let div1;
	let div0;
	let h10;
	let t0_value = PrismicDOM.RichText.asText(/*intro*/ ctx[0].data.quote) + "";
	let t0;
	let t1;
	let p0;
	let t2_value = PrismicDOM.RichText.asText(/*intro*/ ctx[0].data.author) + "";
	let t2;
	let t3;
	let section;
	let div4;
	let div3;
	let div2;
	let h11;
	let t4;
	let t5;
	let p1;
	let t6;

	const block = {
		c: function create() {
			div1 = element("div");
			div0 = element("div");
			h10 = element("h1");
			t0 = text(t0_value);
			t1 = space();
			p0 = element("p");
			t2 = text(t2_value);
			t3 = space();
			section = element("section");
			div4 = element("div");
			div3 = element("div");
			div2 = element("div");
			h11 = element("h1");
			t4 = text("Presenting");
			t5 = space();
			p1 = element("p");
			t6 = text("Stories about life in rural France as told by Lynne Turner");
			this.h();
		},
		l: function claim(nodes) {
			div1 = claim_element(nodes, "DIV", { class: true, style: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true, "data-uk-scrollspy": true });
			var div0_nodes = children(div0);
			h10 = claim_element(div0_nodes, "H1", { class: true });
			var h10_nodes = children(h10);
			t0 = claim_text(h10_nodes, t0_value);
			h10_nodes.forEach(detach_dev);
			t1 = claim_space(div0_nodes);
			p0 = claim_element(div0_nodes, "P", { class: true });
			var p0_nodes = children(p0);
			t2 = claim_text(p0_nodes, t2_value);
			p0_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			t3 = claim_space(nodes);
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			div4 = claim_element(section_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			div3 = claim_element(div4_nodes, "DIV", { class: true, "uk-grid": true });
			var div3_nodes = children(div3);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			h11 = claim_element(div2_nodes, "H1", { class: true });
			var h11_nodes = children(h11);
			t4 = claim_text(h11_nodes, "Presenting");
			h11_nodes.forEach(detach_dev);
			t5 = claim_space(div2_nodes);
			p1 = claim_element(div2_nodes, "P", { class: true });
			var p1_nodes = children(p1);
			t6 = claim_text(p1_nodes, "Stories about life in rural France as told by Lynne Turner");
			p1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h10, "class", "quote uk-heading-primary animate uk-invisible svelte-1gluh78");
			add_location(h10, file$1, 8, 0, 402);
			attr_dev(p0, "class", "author svelte-1gluh78");
			add_location(p0, file$1, 9, 0, 512);
			attr_dev(div0, "class", "intro uk-width-1-2@m uk-text-center uk-margin-auto uk-margin-auto-vertical svelte-1gluh78");
			attr_dev(div0, "data-uk-scrollspy", "target: > .animate; cls: uk-animation-slide-bottom-small uk-invisible; delay: 300");
			add_location(div0, file$1, 7, 0, 211);
			attr_dev(div1, "class", "uk-height-viewport uk-background-cover uk-light uk-flex");
			set_style(div1, "background-image", "url('" + /*intro*/ ctx[0].data.image.url + "')");
			add_location(div1, file$1, 6, 0, 84);
			attr_dev(h11, "class", "svelte-1gluh78");
			add_location(h11, file$1, 17, 0, 768);
			attr_dev(p1, "class", "svelte-1gluh78");
			add_location(p1, file$1, 18, 0, 788);
			attr_dev(div2, "class", "heading svelte-1gluh78");
			add_location(div2, file$1, 16, 0, 746);
			attr_dev(div3, "class", "uk-child-width-expand uk-grid-small uk-text-center ");
			attr_dev(div3, "uk-grid", "");
			add_location(div3, file$1, 15, 0, 672);
			attr_dev(div4, "class", "uk-container uk-container-small");
			add_location(div4, file$1, 14, 0, 626);
			attr_dev(section, "class", "uk-section svelte-1gluh78");
			add_location(section, file$1, 13, 0, 597);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div1, anchor);
			append_dev(div1, div0);
			append_dev(div0, h10);
			append_dev(h10, t0);
			append_dev(div0, t1);
			append_dev(div0, p0);
			append_dev(p0, t2);
			insert_dev(target, t3, anchor);
			insert_dev(target, section, anchor);
			append_dev(section, div4);
			append_dev(div4, div3);
			append_dev(div3, div2);
			append_dev(div2, h11);
			append_dev(h11, t4);
			append_dev(div2, t5);
			append_dev(div2, p1);
			append_dev(p1, t6);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*intro*/ 1 && t0_value !== (t0_value = PrismicDOM.RichText.asText(/*intro*/ ctx[0].data.quote) + "")) set_data_dev(t0, t0_value);
			if (dirty & /*intro*/ 1 && t2_value !== (t2_value = PrismicDOM.RichText.asText(/*intro*/ ctx[0].data.author) + "")) set_data_dev(t2, t2_value);

			if (dirty & /*intro*/ 1) {
				set_style(div1, "background-image", "url('" + /*intro*/ ctx[0].data.image.url + "')");
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div1);
			if (detaching) detach_dev(t3);
			if (detaching) detach_dev(section);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$1($$self, $$props, $$invalidate) {
	let { intro } = $$props;
	const writable_props = ["intro"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Intro> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Intro", $$slots, []);

	$$self.$set = $$props => {
		if ("intro" in $$props) $$invalidate(0, intro = $$props.intro);
	};

	$$self.$capture_state = () => ({ PrismicDOM, intro });

	$$self.$inject_state = $$props => {
		if ("intro" in $$props) $$invalidate(0, intro = $$props.intro);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [intro];
}

class Intro extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$1, safe_not_equal, { intro: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Intro",
			options,
			id: create_fragment$1.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*intro*/ ctx[0] === undefined && !("intro" in props)) {
			console.warn("<Intro> was created without expected prop 'intro'");
		}
	}

	get intro() {
		throw new Error("<Intro>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set intro(value) {
		throw new Error("<Intro>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/routes/index.svelte generated by Svelte v3.24.0 */

function create_fragment$2(ctx) {
	let t0;
	let intro_1;
	let t1;
	let list;
	let current;

	intro_1 = new Intro({
			props: { intro: /*intro*/ ctx[0] },
			$$inline: true
		});

	list = new List({
			props: { posts: /*posts*/ ctx[1] },
			$$inline: true
		});

	const block = {
		c: function create() {
			t0 = space();
			create_component(intro_1.$$.fragment);
			t1 = space();
			create_component(list.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-m28ngv\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			claim_component(intro_1.$$.fragment, nodes);
			t1 = claim_space(nodes);
			claim_component(list.$$.fragment, nodes);
			this.h();
		},
		h: function hydrate() {
			document.title = "Storywriter Blog";
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			mount_component(intro_1, target, anchor);
			insert_dev(target, t1, anchor);
			mount_component(list, target, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const intro_1_changes = {};
			if (dirty & /*intro*/ 1) intro_1_changes.intro = /*intro*/ ctx[0];
			intro_1.$set(intro_1_changes);
			const list_changes = {};
			if (dirty & /*posts*/ 2) list_changes.posts = /*posts*/ ctx[1];
			list.$set(list_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(intro_1.$$.fragment, local);
			transition_in(list.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(intro_1.$$.fragment, local);
			transition_out(list.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			destroy_component(intro_1, detaching);
			if (detaching) detach_dev(t1);
			destroy_component(list, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$2.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

let intro;
let posts;

async function preload({ params, query }) {
	intro = await Client.getSingle("home");

	const postResponse = await Client.query(index.Predicates.at("document.type", "post"), {
		orderings: "[my.post.publication_date desc]"
	});

	posts = postResponse.results;

	if (intro && posts) {
		return { intro, posts };
	} else {
		this.error(res.status, data.message);
	}
}

function formatDate$1(date) {
	return new Date(date).toLocaleDateString();
}

function instance$2($$self, $$props, $$invalidate) {
	let { intro } = $$props;
	let { posts } = $$props;
	const writable_props = ["intro", "posts"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Routes> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Routes", $$slots, []);

	$$self.$set = $$props => {
		if ("intro" in $$props) $$invalidate(0, intro = $$props.intro);
		if ("posts" in $$props) $$invalidate(1, posts = $$props.posts);
	};

	$$self.$capture_state = () => ({
		Prismic: index,
		Client,
		linkResolver,
		Intro,
		List,
		intro,
		posts,
		preload,
		formatDate: formatDate$1,
		intro,
		posts
	});

	$$self.$inject_state = $$props => {
		if ("intro" in $$props) $$invalidate(0, intro = $$props.intro);
		if ("posts" in $$props) $$invalidate(1, posts = $$props.posts);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [intro, posts];
}

class Routes extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$2, create_fragment$2, safe_not_equal, { intro: 0, posts: 1 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Routes",
			options,
			id: create_fragment$2.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*intro*/ ctx[0] === undefined && !("intro" in props)) {
			console.warn("<Routes> was created without expected prop 'intro'");
		}

		if (/*posts*/ ctx[1] === undefined && !("posts" in props)) {
			console.warn("<Routes> was created without expected prop 'posts'");
		}
	}

	get intro() {
		throw new Error("<Routes>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set intro(value) {
		throw new Error("<Routes>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get posts() {
		throw new Error("<Routes>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set posts(value) {
		throw new Error("<Routes>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default Routes;
export { formatDate$1 as formatDate, preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
