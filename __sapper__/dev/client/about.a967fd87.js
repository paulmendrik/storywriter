import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, a as validate_slots, b as space, e as element, t as text, x as query_selector_all, h as detach_dev, g as claim_space, c as claim_element, f as children, j as claim_text, k as attr_dev, l as add_location, m as insert_dev, n as append_dev, p as set_data_dev, q as noop } from './client.ae6638b2.js';
import { C as Client, P as PrismicDOM } from './prismic-config.1f9b09cd.js';

/* src/routes/about.svelte generated by Svelte v3.24.0 */
const file = "src/routes/about.svelte";

function create_fragment(ctx) {
	let title_value;
	let t0;
	let section0;
	let div1;
	let div0;
	let img;
	let img_src_value;
	let img_alt_value;
	let t1;
	let section1;
	let div2;
	let h2;
	let t2_value = PrismicDOM.RichText.asText(/*about*/ ctx[0].data.title) + "";
	let t2;
	let t3;
	let p;
	let t4_value = PrismicDOM.RichText.asText(/*about*/ ctx[0].data.content) + "";
	let t4;
	document.title = title_value = PrismicDOM.RichText.asText(/*about*/ ctx[0].data.title);

	const block = {
		c: function create() {
			t0 = space();
			section0 = element("section");
			div1 = element("div");
			div0 = element("div");
			img = element("img");
			t1 = space();
			section1 = element("section");
			div2 = element("div");
			h2 = element("h2");
			t2 = text(t2_value);
			t3 = space();
			p = element("p");
			t4 = text(t4_value);
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-1xafioe\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			section0 = claim_element(nodes, "SECTION", { class: true });
			var section0_nodes = children(section0);
			div1 = claim_element(section0_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);

			img = claim_element(div0_nodes, "IMG", {
				src: true,
				alt: true,
				"data-uk-cover": true
			});

			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			section0_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);
			section1 = claim_element(nodes, "SECTION", { class: true });
			var section1_nodes = children(section1);
			div2 = claim_element(section1_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			h2 = claim_element(div2_nodes, "H2", { class: true });
			var h2_nodes = children(h2);
			t2 = claim_text(h2_nodes, t2_value);
			h2_nodes.forEach(detach_dev);
			t3 = claim_space(div2_nodes);
			p = claim_element(div2_nodes, "P", { class: true });
			var p_nodes = children(p);
			t4 = claim_text(p_nodes, t4_value);
			p_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			section1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = /*about*/ ctx[0].data.banner.url)) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", img_alt_value = PrismicDOM.RichText.asText(/*about*/ ctx[0].data.title));
			attr_dev(img, "data-uk-cover", "");
			add_location(img, file, 28, 0, 672);
			attr_dev(div0, "class", "uk-height-large uk-cover-container");
			add_location(div0, file, 27, 0, 623);
			attr_dev(div1, "class", "uk-container");
			add_location(div1, file, 26, 0, 596);
			attr_dev(section0, "class", "uk-section uk-section-small uk-padding-remove-bottom");
			add_location(section0, file, 25, 0, 525);
			attr_dev(h2, "class", "uk-heading-medium title svelte-idmke0");
			add_location(h2, file, 36, 8, 906);
			attr_dev(p, "class", "svelte-idmke0");
			add_location(p, file, 37, 8, 1002);
			attr_dev(div2, "class", "uk-container uk-container-small");
			add_location(div2, file, 35, 4, 852);
			attr_dev(section1, "class", "uk-section-small uk-article svelte-idmke0");
			add_location(section1, file, 34, 0, 802);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, section0, anchor);
			append_dev(section0, div1);
			append_dev(div1, div0);
			append_dev(div0, img);
			insert_dev(target, t1, anchor);
			insert_dev(target, section1, anchor);
			append_dev(section1, div2);
			append_dev(div2, h2);
			append_dev(h2, t2);
			append_dev(div2, t3);
			append_dev(div2, p);
			append_dev(p, t4);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*PrismicDOM, about*/ 1 && title_value !== (title_value = PrismicDOM.RichText.asText(/*about*/ ctx[0].data.title))) {
				document.title = title_value;
			}

			if (dirty & /*about*/ 1 && img.src !== (img_src_value = /*about*/ ctx[0].data.banner.url)) {
				attr_dev(img, "src", img_src_value);
			}

			if (dirty & /*about*/ 1 && img_alt_value !== (img_alt_value = PrismicDOM.RichText.asText(/*about*/ ctx[0].data.title))) {
				attr_dev(img, "alt", img_alt_value);
			}

			if (dirty & /*about*/ 1 && t2_value !== (t2_value = PrismicDOM.RichText.asText(/*about*/ ctx[0].data.title) + "")) set_data_dev(t2, t2_value);
			if (dirty & /*about*/ 1 && t4_value !== (t4_value = PrismicDOM.RichText.asText(/*about*/ ctx[0].data.content) + "")) set_data_dev(t4, t4_value);
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(section0);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(section1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

let about;

async function preload({ params, query }) {
	about = await Client.getSingle("about");

	if (about) {
		return { about };
	} else {
		this.error(res.status, data.message);
	}
}

function instance($$self, $$props, $$invalidate) {
	let { about } = $$props;
	const writable_props = ["about"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<About> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("About", $$slots, []);

	$$self.$set = $$props => {
		if ("about" in $$props) $$invalidate(0, about = $$props.about);
	};

	$$self.$capture_state = () => ({
		PrismicDOM,
		Client,
		about,
		preload,
		about
	});

	$$self.$inject_state = $$props => {
		if ("about" in $$props) $$invalidate(0, about = $$props.about);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [about];
}

class About extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { about: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "About",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*about*/ ctx[0] === undefined && !("about" in props)) {
			console.warn("<About> was created without expected prop 'about'");
		}
	}

	get about() {
		throw new Error("<About>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set about(value) {
		throw new Error("<About>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default About;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJvdXQuYTk2N2ZkODcuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvYWJvdXQuc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQgY29udGV4dD1cIm1vZHVsZVwiPlxuICAgIGltcG9ydCBQcmlzbWljRE9NIGZyb20gJ3ByaXNtaWMtZG9tJztcbiAgICBpbXBvcnQgeyBDbGllbnQgfSBmcm9tICcuLi8uLi9wcmlzbWljLWNvbmZpZy5qcyc7XG5cbiAgICBsZXQgYWJvdXQ7XG5cbiAgICBleHBvcnQgYXN5bmMgZnVuY3Rpb24gcHJlbG9hZCh7IHBhcmFtcywgcXVlcnkgfSkge1xuICAgICAgICBhYm91dCA9IGF3YWl0IENsaWVudC5nZXRTaW5nbGUoJ2Fib3V0Jyk7XG5cbiAgICAgICAgaWYgKGFib3V0KSB7XG4gICAgICAgICAgICByZXR1cm4ge2Fib3V0fTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuZXJyb3IocmVzLnN0YXR1cywgZGF0YS5tZXNzYWdlKTtcbiAgICAgICAgfVxuICAgIH1cbjwvc2NyaXB0PlxuXG48c2NyaXB0PlxuICAgIGV4cG9ydCBsZXQgYWJvdXQ7XG48L3NjcmlwdD5cblxuPHN2ZWx0ZTpoZWFkPlxuICAgIDx0aXRsZT57UHJpc21pY0RPTS5SaWNoVGV4dC5hc1RleHQoYWJvdXQuZGF0YS50aXRsZSl9PC90aXRsZT5cbjwvc3ZlbHRlOmhlYWQ+XG5cbjxzZWN0aW9uIGNsYXNzPVwidWstc2VjdGlvbiB1ay1zZWN0aW9uLXNtYWxsIHVrLXBhZGRpbmctcmVtb3ZlLWJvdHRvbVwiPlxuPGRpdiBjbGFzcz1cInVrLWNvbnRhaW5lclwiPlxuPGRpdiBjbGFzcz1cInVrLWhlaWdodC1sYXJnZSB1ay1jb3Zlci1jb250YWluZXJcIj5cbjxpbWcgc3JjPVwie2Fib3V0LmRhdGEuYmFubmVyLnVybH1cIiBhbHQ9XCJ7UHJpc21pY0RPTS5SaWNoVGV4dC5hc1RleHQoYWJvdXQuZGF0YS50aXRsZSl9XCIgZGF0YS11ay1jb3Zlcj5cbjwvZGl2PlxuPC9kaXY+XG48L3NlY3Rpb24+XG5cblxuPHNlY3Rpb24gY2xhc3M9XCJ1ay1zZWN0aW9uLXNtYWxsIHVrLWFydGljbGVcIj5cbiAgICA8ZGl2IGNsYXNzPVwidWstY29udGFpbmVyIHVrLWNvbnRhaW5lci1zbWFsbFwiPlxuICAgICAgICA8aDIgY2xhc3M9XCJ1ay1oZWFkaW5nLW1lZGl1bSB0aXRsZVwiPntQcmlzbWljRE9NLlJpY2hUZXh0LmFzVGV4dChhYm91dC5kYXRhLnRpdGxlKX08L2gyPlxuICAgICAgICA8cD57UHJpc21pY0RPTS5SaWNoVGV4dC5hc1RleHQoYWJvdXQuZGF0YS5jb250ZW50KX08L3A+XG4gICAgPC9kaXY+XG48L3NlY3Rpb24+XG5cbjxzdHlsZT5cblxuICAgIGgyLnRpdGxlIHtcbiAgICAgICAgZm9udC1mYW1pbHk6IG1vc3RyYS1udW92YSwgc2Fucy1zZXJpZjtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICAgICAgZm9udC1zaXplOiBjbGFtcCg0cmVtLCAzLjV2dywgNHJlbSk7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgIGNvbG9yOiBibGFjaztcbiAgICB9XG5cblxuICAgIC51ay1hcnRpY2xlIHAge1xuICAgICAgICBmb250LWZhbWlseTogYWRvYmUtY2FzbG9uLXBybywgc2VyaWY7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDAgIWltcG9ydGFudDtcbiAgICAgICAgZm9udC1zaXplOiAxLjI1cmVtICFpbXBvcnRhbnQ7XG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxLjU7XG4gICAgICAgIGNvbG9yOiBibGFjayAhaW1wb3J0YW50O1xuICAgIH1cblxuPC9zdHlsZT5cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O2dCQW9DNkMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxNQUFNLFdBQUMsR0FBSyxJQUFDLElBQUksQ0FBQyxLQUFLOzs7O2dCQUM1RSxVQUFVLENBQUMsUUFBUSxDQUFDLE1BQU0sV0FBQyxHQUFLLElBQUMsSUFBSSxDQUFDLE9BQU87O2dDQWY3QyxVQUFVLENBQUMsUUFBUSxDQUFDLE1BQU0sV0FBQyxHQUFLLElBQUMsSUFBSSxDQUFDLEtBQUs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OENBTTVDLEdBQUssSUFBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUc7d0NBQVMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxNQUFNLFdBQUMsR0FBSyxJQUFDLElBQUksQ0FBQyxLQUFLOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3lFQU54RSxVQUFVLENBQUMsUUFBUSxDQUFDLE1BQU0sV0FBQyxHQUFLLElBQUMsSUFBSSxDQUFDLEtBQUs7Ozs7cUVBTTVDLEdBQUssSUFBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUc7Ozs7aUVBQVMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxNQUFNLFdBQUMsR0FBSyxJQUFDLElBQUksQ0FBQyxLQUFLOzs7O3VEQVF2QyxVQUFVLENBQUMsUUFBUSxDQUFDLE1BQU0sV0FBQyxHQUFLLElBQUMsSUFBSSxDQUFDLEtBQUs7dURBQzVFLFVBQVUsQ0FBQyxRQUFRLENBQUMsTUFBTSxXQUFDLEdBQUssSUFBQyxJQUFJLENBQUMsT0FBTzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFqQ2pELEtBQUs7O2VBRWEsT0FBTyxHQUFHLE1BQU0sRUFBRSxLQUFLO0NBQ3pDLEtBQUssU0FBUyxNQUFNLENBQUMsU0FBUyxDQUFDLE9BQU87O0tBRWxDLEtBQUs7V0FDRyxLQUFLOztFQUViLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsT0FBTzs7Ozs7T0FNaEMsS0FBSzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=
